1681407446
waR3U4bTeM%3Adef968f48f9a8de4bc35ef4a4dac2646-350725bdcf7bac240c393e88db776a30
s:5784:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjM1MDcyNWJkY2Y3YmFjMjQwYzM5M2U4OGRiNzc2YTMwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6OToiaW5kZXgucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTU6ImFkbWluL2luZGV4LnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MzQ0NjoiPD9waHAKc2Vzc2lvbl9zdGFydCgpOwoKLy8gQ29udHJvbGxlciBjYWxsIC0gY29udGFpbnMgZnVuY3Rpb25zIHdoaWNoIGRvIG1vZGVsIHdvcmsgYW5kIHJldHVybiB0aGUgdmlldwpyZXF1aXJlX29uY2UoJy4uL2NvbnRyb2xsZXIvYmFja29mZmljZS5waHAnKTsKcmVxdWlyZV9vbmNlKERJUiAuICcvdmlldy9iYWNrb2ZmaWNlL1ZpZXdUZW1wbGF0ZS5waHAnKTsKCi8vIFNhbml0aXplIGRvPSB2YWx1ZXMsIG90aGVycyByZXF1aXJlZCBwZXIgcGFnZSBhcmUgc2FuaXRpemVkIHdoZW4gbmVjZXNzYXJ5CiRkbyA9IGlzc2V0KCRfUkVRVUVTVFsnZG8nXSkgPyBmaWx0ZXJfdmFyKCRfUkVRVUVTVFsnZG8nXSwgRklMVEVSX1NBTklUSVpFX1NUUklORykgOiBOVUxMOwoKLy8gUmVxdWVzdCBlbXBsb3llZSBpbmZvcm1hdGlvbnMgaGVyZSB0byBiZSB1c2VkIGZvciBhbnkgcGFnZSBpZiB0aGUgZW1wbG95ZWUgaXMgbG9nZ2VkLWluCmlmIChpc3NldCgkX1NFU1NJT05bJ2FkbWluaWQnXSkpCnsKCXJlcXVpcmVfb25jZShESVIgLiAnL21vZGVsL01vZGVsRW1wbG95ZS5waHAnKTsKCSRNb2RlbEVtcGxveWUgPSBuZXcgXEVjb21tZXJjZVxNb2RlbFxNb2RlbEVtcGxveWUoJGNvbmZpZyk7CgkkYWRtaW51c2VyID0gJE1vZGVsRW1wbG95ZS0+Z2V0RW1wbG95ZWVJbmZvc0Zyb21JZCgkX1NFU1NJT05bJ2FkbWluaWQnXSk7Cn0KCmlmIChlbXB0eSgkX1NFU1NJT05bJ2FkbWlubG9nZ2VkaW4nXSkgQU5EICFpbl9hcnJheSgkZG8sIGFycmF5KCdsb2dpbicsICdkb2xvZ2luJykpKQp7CgkkZG8gPSAnbG9naW4nOwp9CgovLyBXZSBkZWZpbmUgd2hpY2ggYWN0aW9uIHRvIGRvIGFuZCB3aWxsIHNlYXJjaCBpbiB0aGUgY29udHJvbGxlciB0aGUgY2FsbGVkIGZ1bmN0aW9uCnRyeQp7Cglzd2l0Y2goJGRvKQoJewoJCWNhc2UgJ2luZGV4JzoKCQlkZWZhdWx0OgoJCQlpbmRleCgpOwoJCQlicmVhazsKCQljYXNlICdsb2dpbic6CgkJCWxvZ2luKCk7CgkJCWJyZWFrOwoJCWNhc2UgJ2RvbG9naW4nOgoJCQkkbG9naW4gPSBpc3NldCgkX1BPU1RbJ2xvZ2luJ10pID8gZmlsdGVyX3Zhcl9hcnJheSgkX1BPU1RbJ2xvZ2luJ10pIDogTlVMTDsKCQkJZG9Mb2dpbigkbG9naW4pOwoJCQlleGl0OwoJCWNhc2UgJ2xpc3Ryb2xlcyc6CgkJCUxpc3RSb2xlcygpOwoJCQlicmVhazsKCQljYXNlICdhZGRyb2xlJzoKCQkJQWRkUm9sZSgpOwoJCQlicmVhazsKCQljYXNlICdpbnNlcnRyb2xlJzoKCQkJJG5hbWUgPSBpc3NldCgkX1BPU1RbJ25hbWUnXSkgPyBmaWx0ZXJfdmFyKCRfUE9TVFsnbmFtZSddLCBGSUxURVJfU0FOSVRJWkVfU1RSSU5HKSA6IE5VTEw7CgkJCUluc2VydFJvbGUoJG5hbWUpOwoJCQlicmVhazsKCQljYXNlICdlZGl0cm9sZSc6CgkJCSRpZCA9IGlzc2V0KCRfR0VUWydpZCddKSA/IGZpbHRlcl92YXIoJF9HRVRbJ2lkJ10sIEZJTFRFUl9WQUxJREFURV9JTlQpIDogTlVMTDsKCQkJRWRpdFJvbGUoJGlkKTsKCQkJYnJlYWs7CgkJY2FzZSAndXBkYXRlcm9sZSc6CgkJCSRpZCA9IGlzc2V0KCRfUE9TVFsnaWQnXSkgPyBmaWx0ZXJfdmFyKCRfUE9TVFsnaWQnXSwgRklMVEVSX1ZBTElEQVRFX0lOVCkgOiBOVUxMOwoJCQkkbmFtZSA9IGlzc2V0KCRfUE9TVFsnbmFtZSddKSA/IGZpbHRlcl92YXIoJF9QT1NUWyduYW1lJ10sIEZJTFRFUl9TQU5JVElaRV9TVFJJTkcpIDogTlVMTDsKCQkJVXBkYXRlUm9sZSgkaWQsICRuYW1lKTsKCQkJZXhpdDsKCQljYXNlICdkZWxldGVyb2xlJzoKCQkJJGlkID0gaXNzZXQoJF9HRVRbJ2lkJ10pID8gZmlsdGVyX3ZhcigkX0dFVFsnaWQnXSwgRklMVEVSX1ZBTElEQVRFX0lOVCkgOiBOVUxMOwoJCQlEZWxldGVSb2xlKCRpZCk7CgkJCWJyZWFrOwoJCWNhc2UgJ2xpc3RjYXRlZ29yaWVzJzoKCQkJTGlzdENhdGVnb3JpZXMoKTsKCQkJYnJlYWs7CgkJY2FzZSAnYWRkY2F0ZWdvcnknOgoJCQlBZGRDYXRlZ29yeSgpOwoJCQlicmVhazsKCQljYXNlICdpbnNlcnRjYXRlZ29yeSc6CgkJCSR0aXRsZSA9IGlzc2V0KCRfUE9TVFsndGl0bGUnXSkgPyBmaWx0ZXJfdmFyKCRfUE9TVFsndGl0bGUnXSwgRklMVEVSX1NBTklUSVpFX1NUUklORykgOiBOVUxMOwoJCQkkcGFyZW50Y2F0ZWdvcnkgPSBpc3NldCgkX1BPU1RbJ3BhcmVudGNhdGVnb3J5J10pID8gZmlsdGVyX3ZhcigkX1BPU1RbJ3BhcmVudGNhdGVnb3J5J10sIEZJTFRFUl9TQU5JVElaRV9TVFJJTkcpIDogTlVMTDsKCQkJJHN0YXR1cyA9IGlzc2V0KCRfUE9TVFsnc3RhdHVzJ10pID8gZmlsdGVyX3ZhcigkX1BPU1RbJ3N0YXR1cyddLCBGSUxURVJfVkFMSURBVEVfQk9PTEVBTikgOiBOVUxMOwoJCQlJbnNlcnRDYXRlZ29yeSgkdGl0bGUsICRwYXJlbnRjYXRlZ29yeSwgJHN0YXR1cyk7CgkJCWV4aXQ7CgkJY2FzZSAnZWRpdGNhdGVnb3J5JzoKCQkJJGlkID0gaXNzZXQoJF9HRVRbJ2lkJ10pID8gZmlsdGVyX3ZhcigkX0dFVFsnaWQnXSwgRklMVEVSX1ZBTElEQVRFX0lOVCkgOiBOVUxMOwoJCQlFZGl0Q2F0ZWdvcnkoJGlkKTsKCQkJYnJlYWs7CgkJY2FzZSAndXBkYXRlY2F0ZWdvcnknOgoJCQkkaWQgPSBpc3NldCgkX1BPU1RbJ2lkJ10pID8gZmlsdGVyX3ZhcigkX1BPU1RbJ2lkJ10sIEZJTFRFUl9WQUxJREFURV9JTlQpIDogTlVMTDsKCQkJJHRpdGxlID0gaXNzZXQoJF9QT1NUWyd0aXRsZSddKSA/IGZpbHRlcl92YXIoJF9QT1NUWyd0aXRsZSddLCBGSUxURVJfU0FOSVRJWkVfU1RSSU5HKSA6IE5VTEw7CgkJCSRwYXJlbnRjYXRlZ29yeSA9IGlzc2V0KCRfUE9TVFsncGFyZW50Y2F0ZWdvcnknXSkgPyBmaWx0ZXJfdmFyKCRfUE9TVFsncGFyZW50Y2F0ZWdvcnknXSwgRklMVEVSX1ZBTElEQVRFX0lOVCkgOiBOVUxMOwoJCQkkc3RhdHVzID0gaXNzZXQoJF9QT1NUWydzdGF0dXMnXSkgPyBmaWx0ZXJfdmFyKCRfUE9TVFsnc3RhdHVzJ10sIEZJTFRFUl9TQU5JVElaRV9TVFJJTkcpIDogTlVMTDsKCQkJVXBkYXRlQ2F0ZWdvcnkoJGlkLCAkdGl0bGUsICRwYXJlbnRjYXRlZ29yeSwgJHN0YXR1cyk7CgkJCWV4aXQ7CgkJY2FzZSAnZGVsZXRlY2F0ZWdvcnknOgoJCQkkaWQgPSBpc3NldCgkX0dFVFsnaWQnXSkgPyBmaWx0ZXJfdmFyKCRfR0VUWydpZCddLCBGSUxURVJfVkFMSURBVEVfSU5UKSA6IE5VTEw7CgkJCURlbGV0ZUNhdGVnb3J5KCRpZCk7CgkJCWJyZWFrOwoJCWNhc2UgJ2xpc3Rwcm9kdWN0cyc6CgkJCWxpc3RQcm9kdWN0cygpOwoJCQlicmVhazsKCX0KfQpjYXRjaChFeGNlcHRpb24gJGUpCnsKCSRlcnJvck1lc3NhZ2UgPSAkZS0+Z2V0TWVzc2FnZSgpOwoJcmVxdWlyZV9vbmNlKERJUiAuICcvdmlldy9iYWNrb2ZmaWNlL1ZpZXdFcnJvci5waHAnKTsKCWlmICgkZG8gPT0gJ2RvbG9naW4nKQoJewoJCVZpZXdFcnJvcjo6RGlzcGxheUxvZ2dlZE91dEVycm9yKCRlcnJvck1lc3NhZ2UpOwoJCWV4aXQ7Cgl9CglWaWV3RXJyb3I6OkRpc3BsYXlFcnJvcigkZXJyb3JNZXNzYWdlKTsKfQoKPz4iO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";